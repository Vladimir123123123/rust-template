using System.Collections.Generic;
using System.Reflection;

private static class CWTInfoHolder<TKey, TValue> where TKey : class where TValue : class?
{
	public delegate IEnumerable<TKey> GetKeys(ConditionalWeakTable<TKey, TValue> cwt);

	private static readonly MethodInfo? get_KeysMethod;

	public static readonly GetKeys? get_Keys;

	static CWTInfoHolder()
	{
		get_KeysMethod = typeof(ConditionalWeakTable<TKey, TValue>).GetProperty("Keys", BindingFlags.Instance | BindingFlags.NonPublic)?.GetGetMethod(nonPublic: true);
		if ((object)get_KeysMethod != null)
		{
			get_Keys = (GetKeys)Delegate.CreateDelegate(typeof(GetKeys), get_KeysMethod);
		}
	}
}
