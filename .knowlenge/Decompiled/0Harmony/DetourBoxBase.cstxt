using System.Threading;

protected abstract class DetourBoxBase
{
	public SimpleNativeDetour? Detour;

	protected readonly PlatformTriple Triple;

	protected readonly object Sync = new object();

	private bool applyDetours;

	private bool isApplying;

	public bool IsApplied
	{
		get
		{
			return Volatile.Read(ref applyDetours);
		}
		set
		{
			Volatile.Write(ref applyDetours, value);
			Thread.MemoryBarrier();
		}
	}

	public bool IsApplying
	{
		get
		{
			return Volatile.Read(ref isApplying);
		}
		set
		{
			Volatile.Write(ref isApplying, value);
			Thread.MemoryBarrier();
		}
	}

	protected DetourBoxBase(PlatformTriple triple)
	{
		Triple = triple;
		applyDetours = false;
		isApplying = false;
	}
}
