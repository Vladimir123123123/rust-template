using System;
using System.Threading;

private sealed class LogSubscriptionSimple : IDisposable
{
	private readonly DebugLog log;

	private readonly OnLogMessage del;

	private readonly LogLevelFilter filter;

	public LogSubscriptionSimple(DebugLog log, OnLogMessage del, LogLevelFilter filter)
	{
		this.log = log;
		this.del = del;
		this.filter = filter;
	}

	public void Dispose()
	{
		LevelSubscriptions subscriptions;
		LevelSubscriptions value;
		do
		{
			subscriptions = log.subscriptions;
			value = subscriptions.RemoveSimple(filter, del);
		}
		while (Interlocked.CompareExchange(ref log.subscriptions, value, subscriptions) != subscriptions);
	}
}
