using System;
using System.Runtime.CompilerServices;

public struct MethodDescChunk
{
	[Flags]
	public enum Flags : ushort
	{
		TokenRangeMask = 0x3FF,
		HasCompactEntrypoints = 0x4000,
		IsZapped = 0x8000
	}

	public RelativeFixupPointer m_methodTable;

	public unsafe MethodDescChunk* m_next;

	public byte m_size;

	public byte m_count;

	public Flags m_flagsAndTokenRange;

	public unsafe MethodTable* MethodTable => (MethodTable*)m_methodTable.Value;

	public unsafe MethodDesc* FirstMethodDesc => (MethodDesc*)((byte*)System.Runtime.CompilerServices.Unsafe.AsPointer(ref this) + sizeof(MethodDescChunk));

	public uint Size => (uint)(m_size + 1);

	public uint Count => (uint)(m_count + 1);

	public unsafe nuint SizeOf => (nuint)sizeof(MethodDescChunk) + Size * MethodDesc.Alignment;
}
