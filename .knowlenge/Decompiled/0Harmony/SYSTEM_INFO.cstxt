using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

public struct SYSTEM_INFO
{
	[StructLayout(LayoutKind.Explicit)]
	public struct _Anonymous_e__Union
	{
		public struct _Anonymous_e__Struct
		{
			public ushort wProcessorArchitecture;

			public ushort wReserved;
		}

		[FieldOffset(0)]
		public uint dwOemId;

		[FieldOffset(0)]
		public _Anonymous_e__Struct Anonymous;
	}

	public _Anonymous_e__Union Anonymous;

	public uint dwPageSize;

	public unsafe void* lpMinimumApplicationAddress;

	public unsafe void* lpMaximumApplicationAddress;

	public nuint dwActiveProcessorMask;

	public uint dwNumberOfProcessors;

	public uint dwProcessorType;

	public uint dwAllocationGranularity;

	public ushort wProcessorLevel;

	public ushort wProcessorRevision;

	[UnscopedRef]
	public ref uint dwOemId
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			return ref Anonymous.dwOemId;
		}
	}

	[UnscopedRef]
	public ref ushort wProcessorArchitecture
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			return ref Anonymous.Anonymous.wProcessorArchitecture;
		}
	}

	[UnscopedRef]
	public ref ushort wReserved
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			return ref Anonymous.Anonymous.wReserved;
		}
	}
}
