using System;
using System.Threading;

private sealed class ScopeHandler : ScopeHandlerBase<DynamicReferenceCell>
{
	public static readonly ScopeHandler Instance = new ScopeHandler();

	public override void EndScope(DynamicReferenceCell data)
	{
		bool lockTaken = false;
		try
		{
			writeLock.Enter(ref lockTaken);
			Cell[] cells = DynamicReferenceManager.cells;
			Cell cell = Volatile.Read(ref cells[data.Index]);
			if (cell != null && cell.GetHashCode() == data.Hash)
			{
				Volatile.Write(ref cells[data.Index], null);
				firstEmptyCell = Math.Min(firstEmptyCell, data.Index);
			}
		}
		finally
		{
			if (lockTaken)
			{
				writeLock.Exit();
			}
		}
	}
}
