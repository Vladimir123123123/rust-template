using System;
using System.Runtime.InteropServices;

public class V21
{
	public struct CORINFO_SIG_INST
	{
		public uint classInstCount;

		public unsafe IntPtr* classInst;

		public uint methInstCount;

		public unsafe IntPtr* methInst;
	}

	public struct CORINFO_SIG_INFO
	{
		public int callConv;

		public IntPtr retTypeClass;

		public IntPtr retTypeSigClass;

		public byte retType;

		public byte flags;

		public ushort numArgs;

		public CORINFO_SIG_INST sigInst;

		public IntPtr args;

		public IntPtr pSig;

		public uint sbSig;

		public IntPtr scope;

		public uint token;
	}

	public struct CORINFO_METHOD_INFO
	{
		public IntPtr ftn;

		public IntPtr scope;

		public unsafe byte* ILCode;

		public uint ILCodeSize;

		public uint maxStack;

		public uint EHcount;

		public int options;

		public int regionKind;

		public CORINFO_SIG_INFO args;

		public CORINFO_SIG_INFO locals;
	}

	[UnmanagedFunctionPointer(CallingConvention.StdCall)]
	public unsafe delegate CorJitResult CompileMethodDelegate(IntPtr thisPtr, IntPtr corJitInfo, CORINFO_METHOD_INFO* methodInfo, uint flags, byte** nativeEntry, uint* nativeSizeOfCode);

	public unsafe static InvokeCompileMethodPtr InvokeCompileMethodPtr => new InvokeCompileMethodPtr((delegate*<IntPtr, IntPtr, IntPtr, CORINFO_METHOD_INFO*, uint, byte**, uint*, CorJitResult>)(&InvokeCompileMethod));

	public unsafe static CorJitResult InvokeCompileMethod(IntPtr functionPtr, IntPtr thisPtr, IntPtr corJitInfo, CORINFO_METHOD_INFO* methodInfo, uint flags, byte** pNativeEntry, uint* pNativeSizeOfCode)
	{
		if (functionPtr == IntPtr.Zero)
		{
			*pNativeEntry = null;
			*pNativeSizeOfCode = 0u;
			return CorJitResult.CORJIT_OK;
		}
		delegate* unmanaged[Stdcall]<IntPtr, IntPtr, CORINFO_METHOD_INFO*, uint, byte**, uint*, CorJitResult> delegate* = (delegate* unmanaged[Stdcall]<IntPtr, IntPtr, CORINFO_METHOD_INFO*, uint, byte**, uint*, CorJitResult>)(void*)functionPtr;
		delegate* unmanaged[Stdcall]<IntPtr, IntPtr, CORINFO_METHOD_INFO*, uint, byte**, uint*, CorJitResult> delegate*2 = delegate*;
		/*Error near IL_002b: Handle with invalid row number.*/;
	}
}
