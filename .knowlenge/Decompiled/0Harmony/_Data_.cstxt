using System;
using System.Collections.Generic;

private class _Data_ : IDisposable
{
	public readonly Dictionary<string, Func<TTarget, object?>> Getters = new Dictionary<string, Func<TTarget, object>>();

	public readonly Dictionary<string, Action<TTarget, object?>> Setters = new Dictionary<string, Action<TTarget, object>>();

	public readonly Dictionary<string, object?> Data = new Dictionary<string, object>();

	public readonly HashSet<string> Disposable = new HashSet<string>();

	~_Data_()
	{
		Dispose();
	}

	public void Dispose()
	{
		lock (Data)
		{
			if (Data.Count == 0)
			{
				return;
			}
			foreach (string item in Disposable)
			{
				if (Data.TryGetValue(item, out object value) && value is IDisposable disposable)
				{
					disposable.Dispose();
				}
			}
			Disposable.Clear();
			Data.Clear();
		}
		GC.SuppressFinalize(this);
	}
}
