public class CombatStationaryState : BasicAIState
{
	public CombatStationaryState()
		: base(AIState.CombatStationary)
	{
		base.AgrresiveState = true;
	}

	public override void StateLeave(BaseAIBrain brain, BaseEntity entity)
	{
		base.StateLeave(brain, entity);
		brain.Navigator.ClearFacingDirectionOverride();
	}

	public override StateStatus StateThink(float delta, BaseAIBrain brain, BaseEntity entity)
	{
		base.StateThink(delta, brain, entity);
		BaseEntity baseEntity = brain.Events.Memory.Entity.Get(brain.Events.CurrentInputMemorySlot);
		if (baseEntity != null)
		{
			brain.Navigator.SetFacingDirectionEntity(baseEntity);
		}
		else
		{
			brain.Navigator.ClearFacingDirectionOverride();
		}
		return StateStatus.Running;
	}
}
