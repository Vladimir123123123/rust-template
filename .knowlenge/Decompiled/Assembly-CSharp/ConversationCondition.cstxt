using System;
using ConVar;

[Serializable]
public class ConversationCondition
{
	public enum ConditionType
	{
		None,
		HasHealth,
		HasScrap,
		ProviderBusy,
		MissionComplete,
		MissionAttempted,
		CanAccept,
		ConVar
	}

	public ConditionType conditionType;

	public uint conditionAmount;

	public string conditionString = "";

	public BaseMission conditionMission;

	public bool inverse;

	public string failedSpeechNode;

	public bool Passes(BasePlayer player, IConversationProvider provider)
	{
		bool flag = false;
		if (conditionType == ConditionType.HasScrap)
		{
			flag = player.inventory.GetAmount(ItemManager.FindItemDefinition("scrap").itemid) >= conditionAmount;
		}
		else if (conditionType == ConditionType.HasHealth)
		{
			flag = player.health >= (float)conditionAmount;
		}
		else if (conditionType == ConditionType.ProviderBusy)
		{
			flag = provider.ProviderBusy();
		}
		else if (conditionType == ConditionType.MissionComplete)
		{
			flag = player.HasCompletedMission(MissionID());
		}
		else if (conditionType == ConditionType.MissionAttempted)
		{
			flag = player.HasAttemptedMission(MissionID());
		}
		else if (conditionType == ConditionType.CanAccept)
		{
			flag = player.CanAcceptMission(MissionID());
		}
		else if (conditionType == ConditionType.ConVar)
		{
			flag = GetNPCConvar(conditionString);
		}
		if (!inverse)
		{
			return flag;
		}
		return !flag;
	}

	private static bool GetNPCConvar(string convarString)
	{
		return convarString switch
		{
			"vendor_minicopter_enabled" => NPC_ConVars.vendor_minicopter_enabled, 
			"vendor_attack_heli_enabled" => NPC_ConVars.vendor_attack_heli_enabled, 
			"vendor_scrap_heli_enabled" => NPC_ConVars.vendor_scrap_heli_enabled, 
			"vendor_hab_enabled" => NPC_ConVars.vendor_hab_enabled, 
			"vendor_rowboat_enabled" => NPC_ConVars.vendor_rowboat_enabled, 
			"vendor_rhib_enabled" => NPC_ConVars.vendor_rhib_enabled, 
			"vendor_sub_solo_enabled" => NPC_ConVars.vendor_sub_solo_enabled, 
			"vendor_sub_duo_enabled" => NPC_ConVars.vendor_sub_duo_enabled, 
			_ => false, 
		};
	}

	private uint MissionID()
	{
		if (!(conditionMission != null))
		{
			return conditionAmount;
		}
		return conditionMission.id;
	}
}
