#define UNITY_ASSERTIONS
using System;
using System.IO;
using System.Text.RegularExpressions;
using ConVar;
using Network;
using ProtoBuf;
using UnityEngine;
using UnityEngine.Assertions;

public class CopyPasteEntity : PointEntity
{
	public static CopyPasteEntity ServerInstance;

	public const string ClientDirectory = "copypaste";

	public const string FileExtension = ".data";

	public override bool OnRpcMessage(BasePlayer player, uint rpc, Message msg)
	{
		using (TimeWarning.New("CopyPasteEntity.OnRpcMessage"))
		{
			if (rpc == 2913956655u && player != null)
			{
				Assert.IsTrue(player.isServer, "SV_RPC Message is using a clientside player!");
				if (Global.developer > 2)
				{
					Debug.Log("SV_RPCMessage: " + player?.ToString() + " - Paste ");
				}
				using (TimeWarning.New("Paste"))
				{
					try
					{
						using (TimeWarning.New("Call"))
						{
							RPCMessage rPCMessage = default(RPCMessage);
							rPCMessage.connection = msg.connection;
							rPCMessage.player = player;
							rPCMessage.read = msg.read;
							RPCMessage rpc2 = rPCMessage;
							Paste(rpc2);
						}
					}
					catch (Exception exception)
					{
						Debug.LogException(exception);
						player.Kick("RPC Error in Paste");
					}
				}
				return true;
			}
		}
		return base.OnRpcMessage(player, rpc, msg);
	}

	public static string MakeFilenameSafe(string input)
	{
		return Regex.Replace(input, "[^a-zA-Z0-9]", "");
	}

	public static string GetClientPath(string fileName)
	{
		return Path.Combine("copypaste", MakeFilenameSafe(fileName) + ".data");
	}

	[RPC_Server]
	public void Paste(RPCMessage rpc)
	{
		if (rpc.player.IsAdmin)
		{
			PasteRequest pasteRequest = PasteRequest.Deserialize(rpc.read);
			CopyPasteEntityInfo pasteData = pasteRequest.pasteData;
			CopyPaste.PasteOptions options = new CopyPaste.PasteOptions(pasteRequest);
			CopyPaste.PasteEntities(pasteData, options, rpc.player.userID);
		}
	}

	public void OnEnable()
	{
		if (base.isServer)
		{
			if (ServerInstance != null)
			{
				Debug.LogError("Major fuckup! CopyPasteEntity spawned twice, Contact Developers!");
				UnityEngine.Object.Destroy(base.gameObject);
			}
			else
			{
				ServerInstance = this;
			}
		}
	}

	public void OnDestroy()
	{
		if (base.isServer)
		{
			ServerInstance = null;
		}
	}
}
