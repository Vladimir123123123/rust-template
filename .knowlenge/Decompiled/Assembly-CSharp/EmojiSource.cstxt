using System;
using UnityEngine;

[Serializable]
public struct EmojiSource
{
	public string Name;

	public EmojiType Type;

	public EmojiResult[] Emoji;

	public SteamDLCItem RequiredDLC;

	public SteamInventoryItem RequiredItem;

	public uint ServerCrc;

	public FileStorage.Type ServerFileType;

	public bool HasSkinTone => Emoji.Length > 1;

	public EmojiResult GetEmojiIndex(int index)
	{
		return Emoji[Mathf.Clamp(index, 0, Emoji.Length - 1)];
	}

	public bool CanBeUsedBy(BasePlayer p)
	{
		if (RequiredDLC != null && !RequiredDLC.CanUse(p))
		{
			return false;
		}
		if (RequiredItem != null && !RequiredItem.HasUnlocked(p.userID))
		{
			return false;
		}
		return true;
	}

	public bool StringMatch(string input, out int index)
	{
		index = 0;
		if (Name.Equals(input, StringComparison.CurrentCultureIgnoreCase))
		{
			return true;
		}
		for (int i = 0; i < Emoji.Length; i++)
		{
			if ($"{Name}+{i}".Equals(input, StringComparison.CurrentCultureIgnoreCase))
			{
				index = i;
				return true;
			}
		}
		return false;
	}
}
