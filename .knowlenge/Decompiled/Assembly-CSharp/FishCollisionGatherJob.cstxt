using Unity.Collections;
using Unity.Jobs;
using Unity.Mathematics;
using UnityEngine;

public struct FishCollisionGatherJob : IJob
{
	public int layerMask;

	public uint seed;

	public int castCount;

	public int fishCount;

	public NativeArray<RaycastCommand> castCommands;

	public NativeArray<FishData> fishDataArray;

	public NativeArray<FishRenderData> fishRenderDataArray;

	public NativeArray<int> fishCastIndices;

	public void Execute()
	{
		Unity.Mathematics.Random random = new Unity.Mathematics.Random(seed);
		int length = castCommands.Length;
		for (int i = 0; i < length; i++)
		{
			if (i >= castCount)
			{
				castCommands[i] = default(RaycastCommand);
				continue;
			}
			int num = random.NextInt(0, fishCount);
			FishData fishData = fishDataArray[num];
			FishRenderData fishRenderData = fishRenderDataArray[num];
			castCommands[i] = new RaycastCommand
			{
				from = fishRenderData.position,
				direction = new float3(fishData.directionX, 0f, fishData.directionZ),
				distance = 4f,
				layerMask = layerMask,
				maxHits = 1
			};
			fishCastIndices[i] = num;
		}
	}
}
