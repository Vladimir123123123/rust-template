using FIMSpace.FTools;
using UnityEngine;

public class HipsHubBackbone
{
	public Transform frontBone;

	private Vector3 _dir = Vector3.zero;

	private Vector3 _sd_dir = Vector3.zero;

	private FMuscle_Vector3 _FMuscle;

	public LegsAnimator Owner { get; private set; }

	public Transform bone { get; private set; }

	public Quaternion initialLocalRotation { get; private set; }

	public Vector3 keyframePosition { get; private set; }

	public Quaternion TargetRotation { get; internal set; }

	public HipsHubBackbone(LegsAnimator owner, Transform b)
	{
		Owner = owner;
		bone = b;
		initialLocalRotation = b.localRotation;
		_FMuscle = new FMuscle_Vector3();
		_FMuscle.Initialize(Vector3.zero);
	}

	public void PreCalibrate()
	{
		bone.localRotation = initialLocalRotation;
	}

	public void Calibrate()
	{
		keyframePosition = bone.position;
	}

	public Vector3 AnimateTargetDirection(Vector3 toHubNewB)
	{
		if (Owner.HubBackBonesElasticity < 0.0001f)
		{
			return toHubNewB;
		}
		if (Owner.HubBackBonesElasticity <= 0.1f)
		{
			_dir = Vector3.SmoothDamp(_dir, toHubNewB, ref _sd_dir, 0.001f + Owner.HubBackBonesElasticity, 10000000f, Owner.DeltaTime);
		}
		else
		{
			_dir = Vector3.LerpUnclamped(toHubNewB, _FMuscle.Update(Owner.DeltaTime, toHubNewB), Owner.HubBackBonesElasticity);
		}
		return _dir;
	}
}
