using System.Collections.Generic;
using FIMSpace.FProceduralAnimation;
using UnityEngine;

public class LAM_AnimationCurvesGlueCondition : LegsAnimatorControlModuleBase
{
	private LegsAnimator.LegsAnimatorCustomModuleHelper _useHelper;

	private LegsAnimator.Variable _play_FloorValueBelow;

	private LegsAnimator.Variable _play_IgnoreMidConditions;

	private LegsAnimator.Variable _play_AllowHeightGlueOnLevels;

	private List<int> animatorHashes;

	private bool initialized;

	private LegsAnimator.Variable FloorValueBelowVar => _useHelper.RequestVariable("Floor Value Below", 0.01f);

	private LegsAnimator.Variable IgnoreMidConditionsVar => _useHelper.RequestVariable("Ignore Mid Conditions", false);

	private LegsAnimator.Variable AllowHeightGlueOnLevelVar => _useHelper.RequestVariable("Allow Height Glue On Level", -1f);

	public override void OnInit(LegsAnimator.LegsAnimatorCustomModuleHelper helper)
	{
		if (!(base.LA.Mecanim == null) && helper.customStringList != null)
		{
			_useHelper = helper;
			_play_FloorValueBelow = FloorValueBelowVar;
			_play_IgnoreMidConditions = IgnoreMidConditionsVar;
			_play_AllowHeightGlueOnLevels = AllowHeightGlueOnLevelVar;
			animatorHashes = new List<int>();
			for (int i = 0; i < base.LA.Legs.Count && i < helper.customStringList.Count; i++)
			{
				animatorHashes.Add(Animator.StringToHash(helper.customStringList[i]));
			}
			initialized = true;
		}
	}

	public override void Leg_LateUpdate(LegsAnimator.LegsAnimatorCustomModuleHelper helper, LegsAnimator.Leg leg)
	{
		if (!initialized || leg.G_CustomForceAttach)
		{
			return;
		}
		float num = base.LA.Mecanim.GetFloat(animatorHashes[leg.PlaymodeIndex]);
		if (num <= _play_AllowHeightGlueOnLevels.GetFloat() && leg.A_PreWasAligning)
		{
			num = _play_FloorValueBelow.GetFloat() - 0.01f;
		}
		if (num <= _play_FloorValueBelow.GetFloat())
		{
			leg.G_CustomForceAttach = base.LA.GroundedTime > 0.2f;
			if (_play_IgnoreMidConditions.GetBool())
			{
				leg.G_CustomForceNOTDetach = true;
			}
		}
		else
		{
			leg.G_CustomForceNOTAttach = true;
			if (_play_IgnoreMidConditions.GetBool())
			{
				leg.G_CustomForceDetach = true;
			}
		}
	}
}
