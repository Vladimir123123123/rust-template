using FIMSpace.FProceduralAnimation;
using UnityEngine;

public class LAM_StepFurther : LegsAnimatorControlModuleBase
{
	private LegsAnimator.Variable _hipsV;

	private LegsAnimator.Variable _powerV;

	private LegsAnimator.Variable _mulV;

	private Vector3 customVelo = Vector3.zero;

	private Vector3 velo = Vector3.zero;

	private Vector3 finalVelo = Vector3.zero;

	private Vector3 _sd_velo = Vector3.zero;

	private Vector3 lastPos;

	public bool UsingCustomVelo { get; set; }

	public void ProvideVelocity(Vector3 velocity)
	{
		UsingCustomVelo = true;
		customVelo = velo;
	}

	public override void OnInit(LegsAnimator.LegsAnimatorCustomModuleHelper helper)
	{
		base.OnInit(helper);
		UsingCustomVelo = false;
		_powerV = helper.RequestVariable("Predict Forward Offset", 0.1f);
		_hipsV = helper.RequestVariable("Predict Forward Hips Offset", 0f);
		_mulV = helper.RequestVariable("Extra Multiplier", 1f);
		lastPos = base.LA.transform.position;
	}

	public override void OnPreLateUpdate(LegsAnimator.LegsAnimatorCustomModuleHelper helper)
	{
		Vector3 vec = (UsingCustomVelo ? base.LA.ToRootLocalSpaceVec(customVelo) : (((bool)base.LA.Rigidbody && !base.LA.Rigidbody.isKinematic) ? base.LA.ToRootLocalSpaceVec(base.LA.Rigidbody.velocity) : (base.LA.usingCustomDesiredMovementDirection ? base.LA.ToRootLocalSpaceVec(base.LA.DesiredMovementDirection * base.LA.IsMovingBlend) : ((!(base.LA.DeltaTime > 0f)) ? Vector3.zero : base.LA.ToRootLocalSpaceVec((base.LegsAnim.BaseTransform.position - lastPos) / base.LA.DeltaTime)))));
		lastPos = base.LegsAnim.BaseTransform.position;
		vec.y = 0f;
		vec = base.LA.RootToWorldSpaceVec(vec);
		velo = Vector3.SmoothDamp(velo, vec, ref _sd_velo, 0.1f, 1000000f, base.LA.DeltaTime);
		finalVelo = velo * (_powerV.GetFloat() * _mulV.GetFloat() * base.EffectBlend);
	}

	public override void Leg_LatePreRaycastingUpdate(LegsAnimator.LegsAnimatorCustomModuleHelper helper, LegsAnimator.Leg leg)
	{
		if (_powerV.GetFloat() > 0f)
		{
			leg.OverrideFinalAndSourceIKPos(leg.GetFinalIKPos() + finalVelo);
			leg.OverrideControlPositionsWithCurrentIKState();
		}
		if (leg.PlaymodeIndex == 0 && _hipsV.GetFloat() > 0f)
		{
			base.LA._Hips_Modules_ExtraWOffset += velo * (_hipsV.GetFloat() * base.EffectBlend);
		}
	}
}
