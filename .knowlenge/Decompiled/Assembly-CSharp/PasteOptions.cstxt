using ProtoBuf;
using UnityEngine;

public class PasteOptions
{
	public const string Argument_NPCs = "--npcs";

	public const string Argument_Resources = "--resources";

	public const string Argument_Vehicles = "--vehicles";

	public const string Argument_Deployables = "--deployables";

	public const string Argument_FoundationsOnly = "--foundations-only";

	public const string Argument_BuildingBlocksOnly = "--building-only";

	public const string Argument_SnapToTerrain = "--autosnap-terrain";

	public const string Argument_PastePlayers = "--players";

	public bool Resources;

	public bool NPCs;

	public bool Vehicles;

	public bool Deployables;

	public bool FoundationsOnly;

	public bool BuildingBlocksOnly;

	public bool SnapToTerrain;

	public bool Players;

	public Vector3 Origin;

	public Quaternion PlayerRotation;

	public Vector3 HeightOffset;

	public PasteOptions(Arg arg)
	{
		Resources = arg.HasArg("--resources", remove: true);
		NPCs = arg.HasArg("--npcs", remove: true);
		Vehicles = arg.HasArg("--vehicles", remove: true);
		Deployables = arg.HasArg("--deployables", remove: true);
		FoundationsOnly = arg.HasArg("--foundations-only", remove: true);
		BuildingBlocksOnly = arg.HasArg("--building-only", remove: true);
		SnapToTerrain = arg.HasArg("--autosnap-terrain", remove: true);
		Players = arg.HasArg("--players", remove: true);
	}

	public PasteOptions(PasteRequest request)
	{
		Resources = request.resources;
		NPCs = request.npcs;
		Vehicles = request.vehicles;
		Deployables = request.deployables;
		FoundationsOnly = request.foundationsOnly;
		BuildingBlocksOnly = request.buildingBlocksOnly;
		SnapToTerrain = request.snapToTerrain;
		Players = request.players;
		Origin = request.origin;
		PlayerRotation = Quaternion.Euler(request.playerRotation);
		HeightOffset = request.heightOffset;
	}
}
