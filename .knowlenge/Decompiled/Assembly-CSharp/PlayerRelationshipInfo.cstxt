using System;
using Facepunch;
using ProtoBuf;
using UnityEngine;

public class PlayerRelationshipInfo : Pool.IPooled, IServerFileReceiver, IPlayerInfo
{
	public string displayName;

	public ulong player;

	public RelationshipType type;

	public int weight;

	public uint mugshotCrc;

	public string notes;

	public float lastSeenTime;

	[NonSerialized]
	public float lastMugshotTime;

	public ulong UserId => player;

	public string UserName => displayName;

	public bool IsOnline => false;

	public bool IsMe => false;

	public bool IsFriend => false;

	public bool IsPlayingThisGame => true;

	public string ServerEndpoint => string.Empty;

	public void EnterPool()
	{
		Reset();
	}

	public void LeavePool()
	{
		Reset();
	}

	private void Reset()
	{
		displayName = null;
		player = 0uL;
		type = RelationshipType.NONE;
		weight = 0;
		mugshotCrc = 0u;
		notes = "";
		lastMugshotTime = 0f;
	}

	public ProtoBuf.RelationshipManager.PlayerRelationshipInfo ToProto()
	{
		ProtoBuf.RelationshipManager.PlayerRelationshipInfo playerRelationshipInfo = Pool.Get<ProtoBuf.RelationshipManager.PlayerRelationshipInfo>();
		playerRelationshipInfo.playerID = player;
		playerRelationshipInfo.type = (int)type;
		playerRelationshipInfo.weight = weight;
		playerRelationshipInfo.mugshotCrc = mugshotCrc;
		playerRelationshipInfo.displayName = displayName;
		playerRelationshipInfo.notes = notes;
		playerRelationshipInfo.timeSinceSeen = Time.realtimeSinceStartup - lastSeenTime;
		return playerRelationshipInfo;
	}

	public static PlayerRelationshipInfo FromProto(ProtoBuf.RelationshipManager.PlayerRelationshipInfo proto)
	{
		return new PlayerRelationshipInfo
		{
			type = (RelationshipType)proto.type,
			weight = proto.weight,
			displayName = proto.displayName,
			mugshotCrc = proto.mugshotCrc,
			notes = proto.notes,
			player = proto.playerID,
			lastSeenTime = Time.realtimeSinceStartup - proto.timeSinceSeen
		};
	}
}
