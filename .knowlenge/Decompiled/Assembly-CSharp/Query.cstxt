using UnityEngine;

public class Query
{
	public struct Input
	{
		public Vector3 position;

		public RadiusSpace radiusSpace;

		public float radius;

		public int sampleCount;

		public float smoothingSpeed;
	}

	public struct Internal
	{
		public int id;

		public void Reset()
		{
			id = -1;
		}
	}

	public struct Result
	{
		public int passed;

		public float coverage;

		public float smoothCoverage;

		public float weightedCoverage;

		public float weightedSmoothCoverage;

		public bool originOccluded;

		public int frame;

		public float originVisibility;

		public float originSmoothVisibility;

		public void Reset()
		{
			passed = 0;
			coverage = 0f;
			smoothCoverage = 0f;
			weightedCoverage = 0f;
			weightedSmoothCoverage = 0f;
			originOccluded = true;
			frame = -1;
			originVisibility = 0f;
			originSmoothVisibility = 0f;
		}
	}

	public Input input;

	public Internal intern;

	public Result result;

	public bool IsRegistered => intern.id >= 0;
}
