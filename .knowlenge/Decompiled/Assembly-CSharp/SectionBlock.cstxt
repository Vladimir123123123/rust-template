using System;
using System.IO;

private struct SectionBlock : IDisposable
{
	private MemoryStream stream;

	private long startPos;

	public static SectionBlock New(Section section, MemoryStream stream)
	{
		SectionBlock result = default(SectionBlock);
		result.stream = stream;
		result.startPos = stream.Position;
		result.Begin(section);
		return result;
	}

	private void Begin(Section section)
	{
		Write(4276993775u);
		Write((byte)section);
		Write(ulong.MaxValue);
	}

	private void End()
	{
		long num = startPos + 5;
		long num2 = stream.Position - num - 8;
		byte[] buffer = stream.GetBuffer();
		for (byte b = 0; b < 8; b++)
		{
			buffer[num + b] = (byte)(num2 >> 56 - b * 8);
		}
		Write(3735928559u);
	}

	public void Write(string text)
	{
		Write((ushort)text.Length);
		for (int i = 0; i < text.Length; i++)
		{
			stream.WriteByte((byte)text[i]);
		}
	}

	public void Write(ulong value)
	{
		for (byte b = 0; b < 8; b++)
		{
			stream.WriteByte((byte)(value >> 56 - b * 8));
		}
	}

	public void Write(uint value)
	{
		for (byte b = 0; b < 4; b++)
		{
			stream.WriteByte((byte)(value >> 24 - b * 8));
		}
	}

	public void Write(ushort value)
	{
		stream.WriteByte((byte)(value >> 8));
		stream.WriteByte((byte)value);
	}

	public void Write(byte value)
	{
		stream.WriteByte(value);
	}

	void IDisposable.Dispose()
	{
		End();
	}
}
