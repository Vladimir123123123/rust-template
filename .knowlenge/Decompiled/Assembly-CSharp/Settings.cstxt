using System;
using UnityEngine;

[Serializable]
public struct Settings
{
	[SerializeField]
	[Tooltip("Filters out pixels under this level of brightness.")]
	public float threshold;

	[SerializeField]
	[Range(0f, 1f)]
	[Tooltip("Makes transition between under/over-threshold gradual.")]
	public float softKnee;

	[Tooltip("Changes extent of veiling effects in a screen resolution-independent fashion.")]
	[Range(1f, 7f)]
	[SerializeField]
	public float radius;

	[SerializeField]
	[Tooltip("Blend factor of the result image.")]
	public float intensity;

	[SerializeField]
	[Tooltip("Controls filter quality and buffer resolution.")]
	public bool highQuality;

	[Tooltip("Reduces flashing noise with an additional filter.")]
	[SerializeField]
	public bool antiFlicker;

	public float thresholdGamma
	{
		get
		{
			return Mathf.Max(0f, threshold);
		}
		set
		{
			threshold = value;
		}
	}

	public float thresholdLinear
	{
		get
		{
			return Mathf.GammaToLinearSpace(thresholdGamma);
		}
		set
		{
			threshold = Mathf.LinearToGammaSpace(value);
		}
	}

	public static Settings defaultSettings
	{
		get
		{
			Settings result = default(Settings);
			result.threshold = 2f;
			result.softKnee = 0f;
			result.radius = 7f;
			result.intensity = 0.7f;
			result.highQuality = true;
			result.antiFlicker = true;
			return result;
		}
	}
}
