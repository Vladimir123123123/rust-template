public class SiegeTowerDoor : Door
{
	private SiegeTower tower;

	protected override bool OnlyCheckForVehicles()
	{
		return false;
	}

	protected override bool InverseDotCheck()
	{
		return true;
	}

	protected override bool CheckOnClose()
	{
		return false;
	}

	public void SetupDoor(SiegeTower tower)
	{
		this.tower = tower;
	}

	private void UpdateTowerHP()
	{
		if (HasParent() && tower != null)
		{
			tower.ProtectedSetHealth(base.health);
		}
	}

	public override void OnRepair()
	{
		base.OnRepair();
		UpdateTowerHP();
	}

	public override void OnRepairFinished()
	{
		base.OnRepairFinished();
		UpdateTowerHP();
	}

	public override void Hurt(HitInfo info)
	{
		if (HasParent() && tower != null)
		{
			tower.ProtectedHurt(info);
		}
	}

	public override void OnDied(HitInfo info)
	{
		base.OnDied(info);
		if (tower != null && !tower.IsDead())
		{
			tower.Die();
		}
	}

	public void ProtectedHurt(HitInfo info)
	{
		info.HitEntity = this;
		base.Hurt(info);
	}

	public override void OnFlagsChanged(Flags old, Flags next)
	{
		base.OnFlagsChanged(old, next);
		if (tower != null && old != next)
		{
			tower.RefreshLastUseTime();
		}
	}
}
