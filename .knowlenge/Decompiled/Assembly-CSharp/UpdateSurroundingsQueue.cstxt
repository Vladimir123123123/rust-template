using System.Collections.Generic;
using ConVar;
using Facepunch;
using UnityEngine;

public class UpdateSurroundingsQueue : ObjectWorkQueue<Bounds>
{
	protected override void RunJob(Bounds bounds)
	{
		NotifyNeighbours(bounds);
	}

	public static void NotifyNeighbours(Bounds bounds)
	{
		if (!Server.stability)
		{
			return;
		}
		List<BaseEntity> obj = Facepunch.Pool.Get<List<BaseEntity>>();
		Vis.Entities(bounds.center, bounds.extents.magnitude + 1f, obj, -2144696062);
		foreach (BaseEntity item in obj)
		{
			if (!item.IsDestroyed && !item.isClient)
			{
				if (item is StabilityEntity stabilityEntity)
				{
					stabilityEntity.OnPhysicsNeighbourChanged();
				}
				else
				{
					item.BroadcastMessage("OnPhysicsNeighbourChanged", SendMessageOptions.DontRequireReceiver);
				}
			}
		}
		Facepunch.Pool.FreeUnmanaged(ref obj);
	}
}
