using Facepunch.BurstCloth.Jobs;
using Unity.Collections;
using Unity.Mathematics;
using UnityEngine.Jobs;

internal struct UpdateTransformsJob : IJobParallelForTransform
{
	[ReadOnly]
	[NativeMatchesParallelForLength]
	public NativeArray<BoneData> Data;

	[ReadOnly]
	[NativeMatchesParallelForLength]
	public NativeArray<BoneState> State;

	public void Execute(int index, [WriteOnly] TransformAccess transform)
	{
		ref readonly BoneData @readonly = ref BurstUtil.GetReadonly(in Data, index);
		ref readonly BoneState readonly2 = ref BurstUtil.GetReadonly(in State, index);
		if (@readonly.Depth != 0)
		{
			ref readonly BoneState readonly3 = ref BurstUtil.GetReadonly(in State, @readonly.Parent);
			RigidTransform a = math.inverse(math.RigidTransform(readonly3.Rotation, readonly3.Position));
			RigidTransform b = math.RigidTransform(readonly2.Rotation, readonly2.Position);
			RigidTransform rigidTransform = math.mul(a, b);
			transform.localRotation = rigidTransform.rot;
			transform.localPosition = rigidTransform.pos;
		}
	}
}
