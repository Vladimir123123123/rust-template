using System;
using System.Collections.Generic;

public class ClientInfo
{
	public Dictionary<string, string> info = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase);

	private int length;

	public void Set(string k, string v)
	{
		if (info.TryGetValue(k, out var value))
		{
			length -= k.Length + value.Length;
			info.Remove(v);
		}
		if (length + k.Length + v.Length <= MaxClientInfoSize)
		{
			length += k.Length + v.Length;
			info[k] = v;
		}
	}

	public string GetString(string k, string def = "")
	{
		if (info.TryGetValue(k, out var value))
		{
			return value;
		}
		return def;
	}

	public float GetFloat(string k, float def = 0f)
	{
		string @string = GetString(k, null);
		if (@string == null)
		{
			return def;
		}
		if (float.TryParse(@string, out var result))
		{
			return result;
		}
		return def;
	}

	public int GetInt(string k, int def = 0)
	{
		string @string = GetString(k, null);
		if (@string == null)
		{
			return def;
		}
		if (int.TryParse(@string, out var result))
		{
			return result;
		}
		return def;
	}

	public bool GetBool(string k, bool def = false)
	{
		string @string = GetString(k, null);
		if (@string == null)
		{
			return def;
		}
		if (bool.TryParse(@string, out var result))
		{
			return result;
		}
		return def;
	}
}
