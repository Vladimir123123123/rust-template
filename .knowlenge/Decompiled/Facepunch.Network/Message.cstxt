using Facepunch;
using Network;

public class Message : Pool.IPooled
{
	public enum Type : byte
	{
		First = 0,
		Welcome = 1,
		Auth = 2,
		Approved = 3,
		Ready = 4,
		Entities = 5,
		EntityDestroy = 6,
		GroupChange = 7,
		GroupDestroy = 8,
		RPCMessage = 9,
		EntityPosition = 10,
		ConsoleMessage = 11,
		ConsoleCommand = 12,
		Effect = 13,
		DisconnectReason = 14,
		Tick = 15,
		Message = 16,
		RequestUserInformation = 17,
		GiveUserInformation = 18,
		GroupEnter = 19,
		GroupLeave = 20,
		VoiceData = 21,
		EAC = 22,
		EntityFlags = 23,
		World = 24,
		ConsoleReplicatedVars = 25,
		QueueUpdate = 26,
		Last = 26,
		Count = 27,
		DemoDisconnection = 50,
		DemoTransientEntities = 51
	}

	public static readonly bool[] EncryptionPerType = new bool[28]
	{
		false, false, false, false, false, true, true, true, true, true,
		true, true, true, true, true, true, true, false, false, true,
		true, true, false, true, false, false, false, false
	};

	public Type type;

	public BaseNetwork peer;

	public NetRead read;

	public Connection connection => read.connection;

	void Pool.IPooled.LeavePool()
	{
	}

	void Pool.IPooled.EnterPool()
	{
		read = null;
		peer = null;
		type = Type.First;
	}
}
