using System.Collections.Generic;
using Facepunch.Nexus;
using Facepunch.Nexus.Models;

public class NexusClanMember
{
	private readonly VariableContainer _variables;

	public string PlayerId { get; set; }

	public int RoleId { get; set; }

	public long Joined { get; set; }

	public long LastSeen { get; set; }

	public IEnumerable<KeyValuePair<string, Variable>> Variables => _variables;

	public NexusClanMember(ClanMember details)
	{
		_variables = new VariableContainer();
		UpdateFromModel(details);
	}

	public bool TryGetVariable(string key, out Variable variable)
	{
		return _variables.TryGet(key, out variable);
	}

	internal bool UpdateFromModel(ClanMember details)
	{
		bool changed = false;
		PlayerId = Util.Update<string>(PlayerId, details.PlayerId, ref changed);
		RoleId = Util.Update<int>(RoleId, details.RoleId, ref changed);
		Joined = Util.Update<long>(Joined, details.Joined, ref changed);
		LastSeen = Util.Update<long>(LastSeen, details.LastSeen, ref changed);
		return changed | _variables.UpdateFromModel(details.Variables);
	}
}
