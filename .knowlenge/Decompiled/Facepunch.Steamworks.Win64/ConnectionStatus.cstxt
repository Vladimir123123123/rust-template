using System.Runtime.InteropServices;
using Steamworks;

[StructLayout(LayoutKind.Sequential, Pack = 8)]
public struct ConnectionStatus
{
	internal ConnectionState state;

	internal int ping;

	internal float connectionQualityLocal;

	internal float connectionQualityRemote;

	internal float outPacketsPerSec;

	internal float outBytesPerSec;

	internal float inPacketsPerSec;

	internal float inBytesPerSec;

	internal int sendRateBytesPerSecond;

	internal int cbPendingUnreliable;

	internal int cbPendingReliable;

	internal int cbSentUnackedReliable;

	internal long ecQueueTime;

	[MarshalAs(UnmanagedType.ByValArray, SizeConst = 16, ArraySubType = UnmanagedType.U4)]
	internal uint[] reserved;

	public int Ping => ping;

	public float OutPacketsPerSec => outPacketsPerSec;

	public float OutBytesPerSec => outBytesPerSec;

	public float InPacketsPerSec => inPacketsPerSec;

	public float InBytesPerSec => inBytesPerSec;

	public float ConnectionQualityLocal => connectionQualityLocal;

	public float ConnectionQualityRemote => connectionQualityRemote;

	public int PendingUnreliable => cbPendingUnreliable;

	public int PendingReliable => cbPendingReliable;

	public int SentUnackedReliable => cbSentUnackedReliable;
}
