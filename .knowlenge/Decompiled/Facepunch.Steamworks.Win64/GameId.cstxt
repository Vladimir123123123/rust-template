using System;
using Steamworks.Data;

public struct GameId : IEquatable<GameId>
{
	public ulong Value;

	public GameIdType Type
	{
		get
		{
			return (GameIdType)(Value >> 24);
		}
		set
		{
			Value = (Value & 0xFFFFFFFF00FFFFFFuL) | ((ulong)value << 24);
		}
	}

	public uint AppId
	{
		get
		{
			return (uint)(Value & 0xFFFFFF);
		}
		set
		{
			Value = (Value & 0xFFFFFFFFFF000000uL) | (value & 0xFFFFFF);
		}
	}

	public uint ModId
	{
		get
		{
			return (uint)(Value >> 32);
		}
		set
		{
			Value = (Value & 0xFFFFFFFFu) | ((ulong)value << 32);
		}
	}

	public static implicit operator GameId(ulong value)
	{
		GameId result = default(GameId);
		result.Value = value;
		return result;
	}

	public static implicit operator ulong(GameId value)
	{
		return value.Value;
	}

	public bool Equals(GameId other)
	{
		return Value == other.Value;
	}

	public override bool Equals(object obj)
	{
		if (obj is GameId other)
		{
			return Equals(other);
		}
		return false;
	}

	public override int GetHashCode()
	{
		return Value.GetHashCode();
	}

	public static bool operator ==(GameId left, GameId right)
	{
		return left.Equals(right);
	}

	public static bool operator !=(GameId left, GameId right)
	{
		return !left.Equals(right);
	}
}
