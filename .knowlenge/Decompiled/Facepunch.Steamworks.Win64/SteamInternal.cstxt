using System;
using System.Runtime.InteropServices;
using Steamworks;

internal static class SteamInternal
{
	internal static class Native
	{
		[DllImport("steam_api64", CallingConvention = CallingConvention.Cdecl)]
		public static extern SteamAPIInitResult SteamInternal_GameServer_Init_V2(uint unIP, ushort usGamePort, ushort usQueryPort, int eServerMode, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Steamworks.Utf8StringToNative")] string pchVersionString, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Steamworks.Utf8StringToNative")] string pszInternalCheckInterfaceVersions, IntPtr pOutErrMsg);
	}

	internal static SteamAPIInitResult GameServer_Init(uint unIP, ushort usGamePort, ushort usQueryPort, int eServerMode, string pchVersionString, string pszInternalCheckInterfaceVersions, out string pOutErrMsg)
	{
		using Helpers.Memory memory = Helpers.Memory.Take();
		SteamAPIInitResult result = Native.SteamInternal_GameServer_Init_V2(unIP, usGamePort, usQueryPort, eServerMode, pchVersionString, pszInternalCheckInterfaceVersions, memory.Ptr);
		pOutErrMsg = Helpers.MemoryToString(memory.Ptr);
		return result;
	}
}
