using System.Collections.Generic;

public class ComparerIgnoreCase : EqualityComparer<StringView>
{
	public static ComparerIgnoreCase Instance = new ComparerIgnoreCase();

	public override bool Equals(StringView x, StringView y)
	{
		if (x.Length != y.Length)
		{
			return false;
		}
		for (int i = 0; i != x.Length; i++)
		{
			char c = x._source[x._start + i];
			char c2 = y._source[y._start + i];
			if (c != c2 && ((c | 0x20) != (c2 | 0x20) || (uint)((c | 0x20) - 97) > 25u))
			{
				return false;
			}
		}
		return true;
	}

	public override int GetHashCode(StringView obj)
	{
		int num = 5381;
		int num2 = num;
		int start = obj._start;
		while (start != obj._end)
		{
			int num3 = obj._source[start++];
			if ((uint)((num3 | 0x20) - 97) <= 25u)
			{
				num3 |= 0x20;
			}
			num = ((num << 5) + num) ^ num3;
			if (start == obj._end)
			{
				break;
			}
			num3 = obj._source[start++];
			if ((uint)((num3 | 0x20) - 97) <= 25u)
			{
				num3 |= 0x20;
			}
			num2 = ((num2 << 5) + num2) ^ num3;
		}
		return num + num2 * 1566083941;
	}
}
