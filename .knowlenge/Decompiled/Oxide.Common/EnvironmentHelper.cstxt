using System;

public static class EnvironmentHelper
{
	public const string SECTION_DELIMITER = ":";

	public const string OXIDE_PREFIX = "OXIDE_";

	public static string GetVariable(string key)
	{
		return Environment.GetEnvironmentVariable(NormalizeKey(key));
	}

	public static void SetVariable(string key, string value, bool throwOnExisting = false, bool force = false)
	{
		key = NormalizeKey(key);
		string text = ((!force) ? Environment.GetEnvironmentVariable(key) : null);
		if (text != null)
		{
			if (throwOnExisting)
			{
				throw new InvalidOperationException("'" + key + "' has existing value of '" + text + "' to override set 'force' to 'true'");
			}
		}
		else
		{
			Environment.SetEnvironmentVariable(key, value);
		}
	}

	private static string NormalizeKey(string key)
	{
		key = key.Trim();
		if (string.IsNullOrEmpty(key))
		{
			return null;
		}
		key = (key.StartsWith("OXIDE_", StringComparison.InvariantCultureIgnoreCase) ? ("OXIDE_" + key.Substring(6)) : ("OXIDE_" + key));
		return key.Replace(":", "__").ToUpperInvariant();
	}
}
