using System.Linq;
using Oxide.Core;
using Oxide.Core.Libraries;
using Oxide.Core.Plugins;

public class Plugins : Library
{
	public override bool IsGlobal => false;

	public PluginManager PluginManager { get; private set; }

	public Plugins(PluginManager pluginmanager)
	{
		PluginManager = pluginmanager;
	}

	[LibraryFunction("Exists")]
	public bool Exists(string name)
	{
		return PluginManager.GetPlugin(name) != null;
	}

	[LibraryFunction("Find")]
	public Plugin Find(string name)
	{
		return PluginManager.GetPlugin(name);
	}

	[LibraryFunction("CallHook")]
	public object CallHook(string hookname, params object[] args)
	{
		return Interface.Call(hookname, args);
	}

	[LibraryFunction("GetAll")]
	public Plugin[] GetAll()
	{
		return PluginManager.GetPlugins().ToArray();
	}
}
