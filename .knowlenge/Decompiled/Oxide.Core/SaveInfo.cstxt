using System;
using System.IO;
using Oxide.Core;
using Oxide.Core.Libraries;
using Oxide.Core.Libraries.Covalence;

public class SaveInfo
{
	private readonly Time time = Interface.Oxide.GetLibrary<Time>();

	private readonly string FullPath;

	public string SaveName { get; private set; }

	public DateTime CreationTime { get; private set; }

	public uint CreationTimeUnix { get; private set; }

	public void Refresh()
	{
		if (File.Exists(FullPath))
		{
			CreationTime = File.GetCreationTime(FullPath);
			CreationTimeUnix = time.GetUnixFromDateTime(CreationTime);
		}
	}

	private SaveInfo(string filepath)
	{
		FullPath = filepath;
		SaveName = Utility.GetFileNameWithoutExtension(filepath);
		Refresh();
	}

	public static SaveInfo Create(string filepath)
	{
		if (!File.Exists(filepath))
		{
			return null;
		}
		return new SaveInfo(filepath);
	}
}
