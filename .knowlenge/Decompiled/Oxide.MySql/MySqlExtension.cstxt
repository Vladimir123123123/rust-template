using System;
using System.Reflection;
using Oxide.Core;
using Oxide.Core.Extensions;
using Oxide.Core.MySql.Libraries;

public class MySqlExtension : Extension
{
	internal static Assembly Assembly = Assembly.GetExecutingAssembly();

	internal static AssemblyName AssemblyName = Assembly.GetName();

	internal static VersionNumber AssemblyVersion = new VersionNumber(AssemblyName.Version.Major, AssemblyName.Version.Minor, AssemblyName.Version.Build);

	internal static string AssemblyAuthors = ((AssemblyCompanyAttribute)Attribute.GetCustomAttribute(Assembly, typeof(AssemblyCompanyAttribute), inherit: false)).Company;

	public override bool IsCoreExtension => true;

	public override string Name => "MySql";

	public override string Author => AssemblyAuthors;

	public override VersionNumber Version => AssemblyVersion;

	public MySqlExtension(ExtensionManager manager)
		: base(manager)
	{
	}

	public override void Load()
	{
		base.Manager.RegisterLibrary("MySql", new Oxide.Core.MySql.Libraries.MySql());
	}

	public override void LoadPluginWatchers(string pluginDirectory)
	{
	}

	public override void OnModLoad()
	{
	}
}
