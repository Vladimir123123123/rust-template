using System;
using Newtonsoft.Json;

public class UriConverter : JsonConverter
{
	public override bool CanConvert(Type objectType)
	{
		return (object)objectType == typeof(Uri);
	}

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		return reader.TokenType switch
		{
			JsonToken.String => new Uri((string)reader.Value), 
			JsonToken.Null => null, 
			_ => throw new InvalidOperationException("Unhandled case for UriConverter. Check to see if this converter has been applied to the wrong serialization type."), 
		};
	}

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		if (value == null)
		{
			writer.WriteNull();
			return;
		}
		Uri uri = value as Uri;
		if (uri == null)
		{
			throw new InvalidOperationException("Unhandled case for UriConverter. Check to see if this converter has been applied to the wrong serialization type.");
		}
		writer.WriteValue(uri.OriginalString);
	}
}
