using System;
using Oxide.Core;
using Oxide.Core.Libraries;
using Oxide.Core.Plugins;

internal class ConsoleCommand
{
	public readonly string Name;

	public PluginCallback Callback;

	public readonly ConsoleSystem.Command RustCommand;

	public Action<ConsoleSystem.Arg> OriginalCallback;

	internal readonly Permission permission = Interface.Oxide.GetLibrary<Permission>();

	public ConsoleCommand(string name)
	{
		Name = name;
		string[] array = Name.Split(new char[1] { '.' });
		RustCommand = new ConsoleSystem.Command
		{
			Name = array[1],
			Parent = array[0],
			FullName = name,
			ServerUser = true,
			ServerAdmin = true,
			Client = true,
			ClientInfo = false,
			Variable = false,
			Call = HandleCommand
		};
	}

	public void AddCallback(Plugin plugin, string name)
	{
		Callback = new PluginCallback(plugin, name);
	}

	public void AddCallback(Plugin plugin, Func<ConsoleSystem.Arg, bool> callback)
	{
		Callback = new PluginCallback(plugin, callback);
	}

	public void HandleCommand(ConsoleSystem.Arg arg)
	{
		Callback.Plugin?.TrackStart();
		Callback.Call(arg);
		Callback.Plugin?.TrackEnd();
	}
}
