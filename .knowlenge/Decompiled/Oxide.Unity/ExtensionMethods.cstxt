using System;
using System.Linq;
using Oxide.Core.Logging;
using UnityEngine;

public static class ExtensionMethods
{
	public static Vector3 ToVector3(this string vector3)
	{
		float[] array = vector3.Split(new char[1] { ',' }).Select(Convert.ToSingle).ToArray();
		if (array.Length != 3)
		{
			return Vector3.zero;
		}
		return new Vector3(array[0], array[1], array[2]);
	}

	public static Oxide.Core.Logging.LogType ToLogType(this UnityEngine.LogType logType)
	{
		switch (logType)
		{
		case UnityEngine.LogType.Error:
		case UnityEngine.LogType.Assert:
		case UnityEngine.LogType.Exception:
			return Oxide.Core.Logging.LogType.Error;
		case UnityEngine.LogType.Warning:
			return Oxide.Core.Logging.LogType.Warning;
		default:
			return Oxide.Core.Logging.LogType.Info;
		}
	}
}
