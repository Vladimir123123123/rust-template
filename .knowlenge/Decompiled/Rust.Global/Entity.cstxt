using System.Collections.Generic;
using Rust;
using UnityEngine;

public static class Entity
{
	private static Dictionary<Transform, IEntity> _dict = new Dictionary<Transform, IEntity>();

	public static void Register(Transform t, IEntity entity)
	{
		_dict[t] = entity;
	}

	public static IEntity Get(Transform t)
	{
		_dict.TryGetValue(t, out var value);
		return value;
	}

	public static void Unregister(Transform t)
	{
		_dict.Remove(t);
	}

	public static void Register(GameObject obj, IEntity entity)
	{
		Register(obj.transform, entity);
	}

	public static IEntity Get(GameObject obj)
	{
		return Get(obj.transform);
	}

	public static void Unregister(GameObject obj)
	{
		Unregister(obj.transform);
	}
}
