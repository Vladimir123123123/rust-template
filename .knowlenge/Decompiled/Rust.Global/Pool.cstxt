using System.Collections.Generic;
using UnityEngine;

public class Pool
{
	public Stack<Object> stack = new Stack<Object>();

	public int allocated;

	public int available;

	public string name;

	public Pool(string name)
	{
		this.name = name;
	}

	public T Pop<T>() where T : Object, new()
	{
		if (stack.Count > 0)
		{
			available--;
			return stack.Pop() as T;
		}
		allocated++;
		return new T
		{
			name = name
		};
	}

	public void Push<T>(ref T instance) where T : Object, new()
	{
		available++;
		stack.Push(instance);
		instance = null;
	}

	public void Clear()
	{
		foreach (Object item in stack)
		{
			Object.Destroy(item);
		}
		available -= stack.Count;
		allocated -= stack.Count;
		stack.Clear();
	}
}
