using Rust.UI;
using UnityEngine;
using UnityEngine.EventSystems;

public static class UIBehaviourEx
{
	public static void SetParent(this UIBehaviour self, Transform parent)
	{
		self.transform.SetParent(parent, worldPositionStays: false);
		if (!parent.gameObject.activeInHierarchy)
		{
			parent.GetComponent<RustLayout>()?.DoLayout();
		}
	}

	public static void SetParent(this UIBehaviour self, Canvas parent)
	{
		self.SetParent(parent.transform);
	}

	public static void SetParent(this UIBehaviour self, UIBehaviour parent)
	{
		self.SetParent(parent.transform);
	}

	public static void SetParentRootCanvas(this UIBehaviour self, Transform tx)
	{
		Canvas componentInParent = tx.GetComponentInParent<Canvas>();
		if (!(componentInParent == null))
		{
			componentInParent = componentInParent.rootCanvas;
			self.SetParent(componentInParent);
		}
	}
}
