using Facepunch.Extend;
using Rust;
using Rust.Workshop;
using UnityEngine;

internal class WorkshopPlayerPreview : MonoBehaviour
{
	internal GameObject Instance;

	protected WorkshopInterface Interface => GetComponentInParent<WorkshopInterface>();

	public void Setup(GameObject ClothingPrefab, ulong id, bool focus, bool IsClothing)
	{
		Cleanup();
		Instance = Global.CreatePrefab("assets/prefabs/player/player_model.prefab");
		Instance.transform.position = Vector3.zero;
		Instance.transform.rotation = Quaternion.identity;
		Instance.SetActive(value: true);
		ClothingPrefab.transform.SetParent(Instance.transform);
		ClothingPrefab.SetActive(value: false);
		Instance.SendMessage("ForceModelSeedMessage", id);
		Instance.SendMessage("WorkshopPreviewSetup", new GameObject[1] { ClothingPrefab });
		Instance.transform.position = SingletonComponent<WorkshopItemEditor>.Instance.item_position_a.transform.position;
		Instance.transform.rotation = SingletonComponent<WorkshopItemEditor>.Instance.item_position_a.transform.rotation;
		if (focus)
		{
			Camera.main.FocusOnRenderer(Instance, new Vector3(0.3f, 0.1f, 1f), Vector3.up);
		}
	}

	public void Cleanup()
	{
		if (Instance != null)
		{
			Object.Destroy(Instance);
			Instance = null;
		}
	}

	private void OnDisable()
	{
		if (!Rust.Application.isQuitting)
		{
			Cleanup();
		}
	}
}
